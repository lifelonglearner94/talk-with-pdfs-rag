## Build Context Optimization
# Exclude large or runtime-generated directories to speed up docker build context sending.

# Daten-Ordner ausschließen (wird normalerweise als Volume gemountet)
data/*
!data/.gitkeep

# Cache und temporäre Dateien
__pycache__/
*.pyc
*.pyo
*.pyd
.Python
*.so
.tox
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.log
.git
.mypy_cache
.pytest_cache
.hypothesis

# IDE und Editor-Dateien
.vscode/
.idea/
*.swp
*.swo
*~

# OS-spezifische Dateien
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Environment und lokale Konfiguration
.env
.env.local
.env.*.local

# Persistenter Vectorstore (wird zur Laufzeit erstellt / kann groß werden)
vectorstore/*
!vectorstore/.gitkeep

# Test Artefakte / Caches (Tests selbst dürfen ins Image für CI)
# (Tests bleiben erhalten, nur Caches/Reports werden gefiltert)
*.pytest_cache/
*test_results*.txt

# UV Lock-Datei ist bereits im Image
# uv.lock - wird benötigt

# Eggs / dist metadata
*.egg-info/
.eggs/
dist/
build/
